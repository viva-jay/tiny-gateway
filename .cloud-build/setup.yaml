steps:
#  set firewall-rules
#  - name: gcr.io/$PROJECT_ID/gcloud
#    entrypoint: /bin/bash
#    args:
#      - '-c'
#      - |
#        gcloud compute firewall-rules create http-inbound \
#        --allow tcp:80 \
#        --target-tags ${_NETWORK_TAG}

##   build docker image(nginx)
#  - name: gcr.io/cloud-builders/docker
#    args: [
#        'build',
#        '-t', 'gcr.io/$PROJECT_ID/${_MOCK_SERVER}',
#        '--cache-from', 'gcr.io/$PROJECT_ID/${_MOCK_SERVER}',
#        '.'
#    ]
#    dir: '.cloud-build/nginx'
#    id: 'build-nginx'
#    waitFor: ["-"]
#
##   build docker image(app)
  - name: gcr.io/cloud-builders/mvn:gcloud
    args: [
        'compile', 'jib:build','-Dimage=gcr.io/$PROJECT_ID/${_SERVICE}'
    ]
    dir: 'core'
    id: 'build-app'

##   deploy and run app instances
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        gcloud compute instances create-with-container ${_SERVICE}-vm --quiet \
              --zone=${_SERVICE_ZONE} \
              --machine-type=${_MACHINE_TYPE} \
              --image-project=cos-cloud \
              --image-family=${_IMAGE_FAMILY} \
              --container-image=gcr.io/$PROJECT_ID/${_SERVICE} \
              --container-restart-policy=always \
              --tags=${_NETWORK_TAG} \
              --no-address
    waitFor: ['build-app']

#   deploy and run nginx instances
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        gcloud compute instances create-with-container ${_MOCK_SERVER}-vm-1 ${_MOCK_SERVER}-vm-2 --quiet \
              --zone=${_SERVICE_ZONE} \
              --machine-type=${_MACHINE_TYPE} \
              --image-project=cos-cloud \
              --image-family=${_IMAGE_FAMILY} \
              --container-image=gcr.io/$PROJECT_ID/${_MOCK_SERVER} \
              --container-restart-policy=always \
              --tags=${_NETWORK_TAG} \
              --no-address
#    waitFor: ['build-nginx']

#images:
#  - 'gcr.io/$PROJECT_ID/${_MOCK_SERVER}'

# arguments
substitutions:
  _SERVICE: 'tiny-gateway'
  _MOCK_SERVER: 'mock-http'
  _NETWORK_TAG: 'load-test'
  _SERVICE_ZONE: 'us-central1-c'
  _MACHINE_TYPE: 'e2-micro'
  _IMAGE_FAMILY: 'cos-stable'

